[{"title":"加密解密","url":"/posts/7862/","content":"\n加密：对称加密\n\n​\t\t\t非对称加密\n\n[常见加密算法和编码识别 - CTF Wiki (ctf-wiki.org)](https://ctf-wiki.org/reverse/identify-encode-encryption/introduction/)\n\n## 程序中的加密算法（Base64，TEA，AES，RC4，MD5）\n\n\n\nBase64：\n\n```\n将3字节的数据  ，先后放入一个24位的缓冲区中，先来的字节占高位，数据不足3字节，于缓冲器中剩下的比特用0补足，每次取出6比特（2∧6）  \n```\n\n![image-20241027170315710](C:\\Users\\86187\\AppData\\Roaming\\Typora\\typora-user-images\\image-20241027170315710.png)\n\nbase64编码表![img](D:\\hexo\\myblog\\source\\_posts\\加密解密\\watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3h1YW5saTQ4NDU=,size_16,color_FFFFFF,t_70)\n\nascll表，16进制转换\n![img](https://iknow-pic.cdn.bcebos.com/cc11728b4710b9121f9e1c6ed1fdfc03934522c7)\n\n![在这里插入图片描述](https://img-blog.csdnimg.cn/5ba04c19c5d24497a7f8f9e66e933541.png#pic_center)\n\nbase64解码加密MZ1-TXox\n\n![image-20240320192223958](C:\\Users\\86187\\AppData\\Roaming\\Typora\\typora-user-images\\image-20240320192223958.png)\n\n编码中出现等号                    MZ\n\n加密过程中出现空缺用等号补齐 <b><font color='red' size=3 face=\"\">Base64要求把每三个8Bit的字节转换为四个6Bit的字节，也就是说编码后的字符长度必然是4的倍数，那么不是4的倍数怎么办，用=号补位，在Base64转换表是没有=号的</font></b> \n\n![image-20240320193359008](C:\\Users\\86187\\AppData\\Roaming\\Typora\\typora-user-images\\image-20240320193359008.png)\n\n应用python如何解码54K55Liq6LWe5ZCn56eL5qKo6laP\n\n![image-20240320195909083](C:\\Users\\86187\\AppData\\Roaming\\Typora\\typora-user-images\\image-20240320195909083.png)\n\nTEA：![image-20240314163437716](C:\\Users\\86187\\AppData\\Roaming\\Typora\\typora-user-images\\image-20240314163437716.png)在 Tea 算法中其最主要的识别特征就是 拥有一个 magic number ：0x9e3779b9 \n\nAES（分组加密算法）：矩阵\n\n明文长度固定为128，0密钥长度128，192，256（密钥长度每增加64位，算法循环    次数增加两轮--128循环10轮）\n\n![image-20240320203636135](C:\\Users\\86187\\AppData\\Roaming\\Typora\\typora-user-images\\image-20240320203636135.png)\n\n <b><font color='red' size=3 face=\"\">AES加密过程</font></b> \n\n![](C:\\Users\\86187\\AppData\\Roaming\\Typora\\typora-user-images\\image-20240320204219029.png)\n\n初始变换（进行异或运算）![image-20240320204404107](C:\\Users\\86187\\AppData\\Roaming\\Typora\\typora-user-images\\image-20240320204404107.png)\n\n![image-20240320204457045](C:\\Users\\86187\\AppData\\Roaming\\Typora\\typora-user-images\\image-20240320204457045.png)\n\n字节转换（查表进行转换19代表第一行第9列）![image-20240320204514603](C:\\Users\\86187\\AppData\\Roaming\\Typora\\typora-user-images\\image-20240320204514603.png)\n\n行移位\n\n![image-20240320204720903](C:\\Users\\86187\\AppData\\Roaming\\Typora\\typora-user-images\\image-20240320204720903.png)\n\n列混合，左乘是固定的矩阵\n\n![image-20240320204816452](C:\\Users\\86187\\AppData\\Roaming\\Typora\\typora-user-images\\image-20240320204816452.png)\n\n轮密钥加（列混合的结果和子密钥矩阵进行异或，子密钥矩阵是将刚开始的16矩阵密钥进行10轮扩展）\n\n密钥  扩展![image-20240320205412780](C:\\Users\\86187\\AppData\\Roaming\\Typora\\typora-user-images\\image-20240320205412780.png)\n\n![image-20240320205655132](C:\\Users\\86187\\AppData\\Roaming\\Typora\\typora-user-images\\image-20240320205655132.png)\n\n![image-20240320205728551](C:\\Users\\86187\\AppData\\Roaming\\Typora\\typora-user-images\\image-20240320205728551.png)\n\n![image-20240320205743840](C:\\Users\\86187\\AppData\\Roaming\\Typora\\typora-user-images\\image-20240320205743840.png)\n\nRC4：生成一个密钥，和明文异或生成密文![image-20240314163553635](C:\\Users\\86187\\AppData\\Roaming\\Typora\\typora-user-images\\image-20240314163553635.png)\n\n流密码：一个bit一个bit加密\n\n <b><font color='red' size=3 face=\"\">密钥长度可变 </font></b> ，以一个足够大的表S为基础，对表进行 <b><font color='SEAGREEN' size=3 face=\"\">非线性</font></b> 变换，产生密钥流\n\n <b><font color='SEAGREEN' size=3 face=\"\">函数在平面是直线，线性===曲线，非线性</font></b> \n\n <b><font color='red' size=3 face=\"\">加密过程</font></b> <b><font color='red' size=3 face=\"\"> ：</font></b> \n\n1. 初始化S表\n\n   1. 对S表（升序，s[0]=0......）进行线性填充，一般为256个字节\n   2. 用种子密钥填充另一个 256字节的K表(若种子密钥长度<256，循环使用填充K表)\n   3. 用K表对S表进行初始转换\n\n   ![img](file:///F:/IMG_20240321_191918.jpg)\n\n   ![image-20240321194428388](C:\\Users\\86187\\AppData\\Roaming\\Typora\\typora-user-images\\image-20240321194428388.png)\n\n2. 密钥流的生成（为每个待加密的字节生成一个伪随机数从s表获得，用来异或）\n\n3. ![image-20240321194749767](C:\\Users\\86187\\AppData\\Roaming\\Typora\\typora-user-images\\image-20240321194749767.png)\n\n​\t\t <b><font color='blue' size=3 face=\"\">当S表完成初始化，种子密钥不再被使用\t</font></b> \t\t\n\nMD5\n\n![image-20240423195313105](C:\\Users\\86187\\AppData\\Roaming\\Typora\\typora-user-images\\image-20240423195313105.png)![image-20240423195534056](C:\\Users\\86187\\AppData\\Roaming\\Typora\\typora-user-images\\image-20240423195534056.png)\n\n## ![image-20240423195739308](C:\\Users\\86187\\AppData\\Roaming\\Typora\\typora-user-images\\image-20240423195739308.png)![image-20240423195821937](C:\\Users\\86187\\AppData\\Roaming\\Typora\\typora-user-images\\image-20240423195821937.png)  脚本语言逆向特点\n\n.Net程序逆向：![image-20240314165241159](C:\\Users\\86187\\AppData\\Roaming\\Typora\\typora-user-images\\image-20240314165241159.png)\n\n![image-20240314165407069](C:\\Users\\86187\\AppData\\Roaming\\Typora\\typora-user-images\\image-20240314165407069.png)\n\nPython逆向\n\n- Pyc逆向\n\n\n![image-20240314184711589](C:\\Users\\86187\\AppData\\Roaming\\Typora\\typora-user-images\\image-20240314184711589.png)\n\n","categories":[],"tags":[]}]